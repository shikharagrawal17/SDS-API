import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ReplaceSpecificDateWithFormat {

    public static String replaceSpecificDate(String inputString, String inputDate) {
        // Known input date format
        String inputDateFormat = "dd-MM-yyyy";

        // Parse the input date into a Date object
        Date targetDate;
        try {
            SimpleDateFormat inputFormatter = new SimpleDateFormat(inputDateFormat);
            targetDate = inputFormatter.parse(inputDate);
        } catch (ParseException e) {
            System.err.println("Invalid input date: " + e.getMessage());
            return inputString; // Return as is if the input date is invalid
        }

        // Define possible date format patterns in the input strings
        String[][] formatMappings = {
            {"ddMMyyyy", "\\d{8}"},
            {"MMddyyyy", "\\d{8}"},
            {"yyyyMMdd", "\\d{8}"},
            {"dd-MM-yyyy", "\\d{2}-\\d{2}-\\d{4}"},
            {"dd-MM-yy", "\\d{2}-\\d{2}-\\d{2}"},
            {"MMddyy", "\\d{6}"},
            {"yyyy/MM/dd", "\\d{4}/\\d{2}/\\d{2}"},
            {"dd/MM/yyyy", "\\d{2}/\\d{2}/\\d{4}"}
        };

        // Iterate through each format mapping
        for (String[] mapping : formatMappings) {
            String format = mapping[0];
            String regex = mapping[1];

            Pattern pattern = Pattern.compile(regex);
            Matcher matcher = pattern.matcher(inputString);

            while (matcher.find()) {
                String matchedDate = matcher.group(); // Extract the matched date

                // Try to parse the matched date using the corresponding format
                try {
                    SimpleDateFormat formatter = new SimpleDateFormat(format);
                    formatter.setLenient(false); // Strict date parsing
                    Date matchedParsedDate = formatter.parse(matchedDate);

                    // If the matched date equals the input date, replace it
                    if (matchedParsedDate.equals(targetDate)) {
                        inputString = inputString.replace(matchedDate, format.toUpperCase());
                    }
                } catch (ParseException ignored) {
                    // Skip invalid matches
                }
            }
        }

        return inputString;
    }

    public static void main(String[] args) {
        // Input date to match
        String inputDate = "09-01-2025";

        // Example input strings
        String inputString1 = "Hello_World-test,123t_09012025_08012025";
        String inputString2 = "Dates: 09-01-2025 and 080125, plus 2025/01/09.";

        System.out.println(replaceSpecificDate(inputString1, inputDate));
        // Expected: Hello_World-test,123t_DDMMYYYY_08012025

        System.out.println(replaceSpecificDate(inputString2, inputDate));
        // Expected: Dates: DD-MM-YYYY and 080125, plus YYYY/MM/DD.
    }
}